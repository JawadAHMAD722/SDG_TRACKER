
@{
	ViewBag.Title = "data_visualization";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>

<div style="margin-top:140px;"></div>
<h3 class="alert-primary" style="padding:10px;text-align:center;border-radius:10px"> SDG Tracker Pakistan Data Visualization</h3>
<br />
<h3 style="text-align:center;">Graphs Based on Dummy Data</h3>
<br />
<ul class="nav nav-tabs">
	<li class="active">
	<a href="#graphtab" data-toggle="tab">Data Visualization (Graphs)</a></li>
	<li><a href="#maptab" data-toggle="tab">Data Visualization (Map)</a></li>
	</ul>
<div class="tab-content">
	<div id="graphtab" class="tab-pane active">
		<div style="margin-top:20px;">
			<div class="row">
				<div class="col-md-4">
					<div style="padding-top:80px;"></div>
					<div class="form">
						<div class="form-group">
							<div class="input-group">
								<select id="drpSDG" class="form-control">
									<option selected>SDG Wise Progress</option>
									@*<option value="ngo">SDG 1 - No Poverty</option>
								<option value="pd">SDG 2 - NO Hunger</option>*@

								</select>
							</div>
						</div>
						<div class="form-group">
							<div class="input-group">
								<select id="drpTargets" class="form-control">
									<option selected>Targets Wise Progress</option>
									@*<option value="ngo">1.1 -By 2030 eradicate extreme poverty for all people everywhere, currently measured as people living on less than $1.25 a day </option>
								<option value="ngo">1.2 -By 2030, reduce at least by half the proportion of men, women and children of all ages living in poverty in all its dimensions according to national definitions </option>*@


								</select>
							</div>
							<div class="form-group">
								<div class="input-group">
									<select id="drpIdicators" class="form-control">
										<option selected>Idicators Wise Progress</option>
										@*<option value="ngo">1.1 -By 2030 eradicate extreme poverty for all people everywhere, currently measured as people living on less than $1.25 a day </option>
									<option value="ngo">1.2 -By 2030, reduce at least by half the proportion of men, women and children of all ages living in poverty in all its dimensions according to national definitions </option>*@


									</select>
								</div>
							</div>


							<div class="form-group">
								<div class="input-group">
									<select id="drpProvince" class="form-control">
										<option selected>Province Wise SDGs Progress</option>
									</select>
								</div>

							</div>
							<div class="form-group">
								<div class="input-group">
									<select id="dprDivision" class="form-control">
										<option selected>Division Wise SDGs Progress</option>
									</select>
								</div>

							</div>

							<div class="form-group">
								<div class="input-group">
									<select id="drpDistrict" class="form-control">
										<option selected>District Wise SDGs Progress</option>
									</select>
								</div>

							</div>

							<div class="form-group">
								<div class="input-group">
									<input id="BtnSubmitFilter" type="button" value="Submit" />
								</div>
							</div>
						</div>
					</div>

				</div>
				<div class="col-md-8">
					<figure class="highcharts-figure">
						<div id="container-line">
							<script>
								Highcharts.chart('container-line', {
									chart: {
										type: 'line'
									},
									title: {
										text: 'Monthly Average Temperature'
									},
									subtitle: {
										text: 'Source: WorldClimate.com'
									},
									xAxis: {
										categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
									},
									yAxis: {
										title: {
											text: 'Temperature (°C)'
										}
									},
									plotOptions: {
										line: {
											dataLabels: {
												enabled: true
											},
											enableMouseTracking: false
										}
									},
									series: [{
										name: 'Tokyo',
										data: [7.0, 6.9, 9.5, 14.5, 18.4, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6]
									}, {
										name: 'London',
										data: [3.9, 4.2, 5.7, 8.5, 11.9, 15.2, 17.0, 16.6, 14.2, 10.3, 6.6, 4.8]
									}]
								});

							</script>

						</div>
						<p class="highcharts-description">
							This chart shows how data labels can be added to the data series. This
							can increase readability and comprehension for small datasets.
						</p>
					</figure>

				</div>

			</div>
			<div class="row">
				<div class="col-md-4"></div>
				<div class="col-md-8">
					<figure class="highcharts-figure">
						<div id="container-bar">
							<script>
								Highcharts.chart('container-bar', {
									chart: {
										type: 'column'
									},
									title: {
										text: 'Monthly Average Rainfall'
									},
									subtitle: {
										text: 'Source: WorldClimate.com'
									},
									xAxis: {
										categories: [
											'Jan',
											'Feb',
											'Mar',
											'Apr',
											'May',
											'Jun',
											'Jul',
											'Aug',
											'Sep',
											'Oct',
											'Nov',
											'Dec'
										],
										crosshair: true
									},
									yAxis: {
										min: 0,
										title: {
											text: 'Rainfall (mm)'
										}
									},
									tooltip: {
										headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
										pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
										'<td style="padding:0"><b>{point.y:.1f} mm</b></td></tr>',
										footerFormat: '</table>',
										shared: true,
										useHTML: true
									},
									plotOptions: {
										column: {
											pointPadding: 0.2,
											borderWidth: 0
										}
									},
									series: [{
										name: 'Tokyo',
										data: [49.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4]

									}, {
										name: 'New York',
										data: [83.6, 78.8, 98.5, 93.4, 106.0, 84.5, 105.0, 104.3, 91.2, 83.5, 106.6, 92.3]

									}, {
										name: 'London',
										data: [48.9, 38.8, 39.3, 41.4, 47.0, 48.3, 59.0, 59.6, 52.4, 65.2, 59.3, 51.2]

									}, {
										name: 'Berlin',
										data: [42.4, 33.2, 34.5, 39.7, 52.6, 75.5, 57.4, 60.4, 47.6, 39.1, 46.8, 51.1]

									}]
								});

							</script>

						</div>
						<p class="highcharts-description">
							This chart shows how data labels can be added to the data series. This
							can increase readability and comprehension for small datasets.
						</p>
					</figure>

				</div>
			</div>
			<div class="row">
				<div class="col-md-4"></div>
				<div class="col-md-8">
					<figure class="highcharts-figure">
						<div id="container-area">
							<script>
								Highcharts.chart('container-area', {
									chart: {
										type: 'area'
									},
									title: {
										text: 'Historic and Estimated Worldwide Population Distribution by Region'
									},
									subtitle: {
										text: 'Source: Wikipedia.org'
									},
									xAxis: {
										categories: ['1750', '1800', '1850', '1900', '1950', '1999', '2050'],
										tickmarkPlacement: 'on',
										title: {
											enabled: false
										}
									},
									yAxis: {
										labels: {
											format: '{value}%'
										},
										title: {
											enabled: false
										}
									},
									tooltip: {
										pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.percentage:.1f}%</b> ({point.y:,.0f} millions)<br/>',
										split: true
									},
									plotOptions: {
										area: {
											stacking: 'percent',
											lineColor: '#ffffff',
											lineWidth: 1,
											marker: {
												lineWidth: 1,
												lineColor: '#ffffff'
											},
											accessibility: {
												pointDescriptionFormatter: function (point) {
													function round(x) {
														return Math.round(x * 100) / 100;
													}
													return (point.index + 1) + ', ' + point.category + ', ' +
														point.y + ' millions, ' + round(point.percentage) + '%, ' +
														point.series.name;
												}
											}
										}
									},
									series: [{
										name: 'Asia',
										data: [502, 635, 809, 947, 1402, 3634, 5268]
									}, {
										name: 'Africa',
										data: [106, 107, 111, 133, 221, 767, 1766]
									}, {
										name: 'Europe',
										data: [163, 203, 276, 408, 547, 729, 628]
									}, {
										name: 'America',
										data: [18, 31, 54, 156, 339, 818, 1201]
									}, {
										name: 'Oceania',
										data: [2, 2, 2, 6, 13, 30, 46]
									}]
								});

							</script>

						</div>
						<p class="highcharts-description">
							This chart shows how data labels can be added to the data series. This
							can increase readability and comprehension for small datasets.
						</p>
					</figure>

				</div>
			</div>
			<div class="row">
				<div class="col-md-4"></div>
				<div class="col-md-8">
					<figure class="highcharts-figure">
						<div id="container-lines">
							<script>
								Highcharts.chart('container-lines', {

									title: {
										text: 'Solar Employment Growth by Sector, 2010-2016'
									},

									subtitle: {
										text: 'Source: thesolarfoundation.com'
									},

									yAxis: {
										title: {
											text: 'Number of Employees'
										}
									},

									xAxis: {
										accessibility: {
											rangeDescription: 'Range: 2010 to 2017'
										}
									},

									legend: {
										layout: 'vertical',
										align: 'right',
										verticalAlign: 'middle'
									},

									plotOptions: {
										series: {
											label: {
												connectorAllowed: false
											},
											pointStart: 2010
										}
									},

									series: [{
										name: 'Installation',
										data: [43934, 52503, 57177, 69658, 97031, 119931, 137133, 154175]
									}, {
										name: 'Manufacturing',
										data: [24916, 24064, 29742, 29851, 32490, 30282, 38121, 40434]
									}, {
										name: 'Sales & Distribution',
										data: [11744, 17722, 16005, 19771, 20185, 24377, 32147, 39387]
									}, {
										name: 'Project Development',
										data: [null, null, 7988, 12169, 15112, 22452, 34400, 34227]
									}, {
										name: 'Other',
										data: [12908, 5948, 8105, 11248, 8989, 11816, 18274, 18111]
									}],

									responsive: {
										rules: [{
											condition: {
												maxWidth: 500
											},
											chartOptions: {
												legend: {
													layout: 'horizontal',
													align: 'center',
													verticalAlign: 'bottom'
												}
											}
										}]
									}

								});

							</script>

						</div>
						<p class="highcharts-description">
							This chart shows how data labels can be added to the data series. This
							can increase readability and comprehension for small datasets.
						</p>
					</figure>

				</div>
			</div>
			<div class="row">
				<div class="col-md-4"></div>
				<div class="col-md-8">
					<figure class="highcharts-figure">
						<div id="container-pie">
							<script>
								Highcharts.chart('container-pie', {
									chart: {
										plotBackgroundColor: null,
										plotBorderWidth: null,
										plotShadow: false,
										type: 'pie'
									},
									title: {
										text: 'Browser market shares in January, 2018'
									},
									tooltip: {
										pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
									},
									accessibility: {
										point: {
											valueSuffix: '%'
										}
									},
									plotOptions: {
										pie: {
											allowPointSelect: true,
											cursor: 'pointer',
											dataLabels: {
												enabled: true,
												format: '<b>{point.name}</b>: {point.percentage:.1f} %'
											}
										}
									},
									series: [{
										name: 'Brands',
										colorByPoint: true,
										data: [{
											name: 'Chrome',
											y: 61.41,
											sliced: true,
											selected: true
										}, {
											name: 'Internet Explorer',
											y: 11.84
										}, {
											name: 'Firefox',
											y: 10.85
										}, {
											name: 'Edge',
											y: 4.67
										}, {
											name: 'Safari',
											y: 4.18
										}, {
											name: 'Sogou Explorer',
											y: 1.64
										}, {
											name: 'Opera',
											y: 1.6
										}, {
											name: 'QQ',
											y: 1.2
										}, {
											name: 'Other',
											y: 2.61
										}]
									}]
								});

							</script>

						</div>
						<p class="highcharts-description">
							This chart shows how data labels can be added to the data series. This
							can increase readability and comprehension for small datasets.
						</p>
					</figure>

				</div>
			</div>
			<div class="row">
				<div class="col-md-4"></div>
				<div class="col-md-8">
					<figure class="highcharts-figure">
						<div id="container-pie2">
							<script>
								// Make monochrome colors
								var pieColors = (function () {
									var colors = [],
										base = Highcharts.getOptions().colors[0],
										i;

									for (i = 0; i < 10; i += 1) {
										// Start out with a darkened base color (negative brighten), and end
										// up with a much brighter color
										colors.push(Highcharts.color(base).brighten((i - 3) / 7).get());
									}
									return colors;
								}());

								// Build the chart
								Highcharts.chart('container-pie2', {
									chart: {
										plotBackgroundColor: null,
										plotBorderWidth: null,
										plotShadow: false,
										type: 'pie'
									},
									title: {
										text: 'Browser market shares at a specific website, 2014'
									},
									tooltip: {
										pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
									},
									accessibility: {
										point: {
											valueSuffix: '%'
										}
									},
									plotOptions: {
										pie: {
											allowPointSelect: true,
											cursor: 'pointer',
											colors: pieColors,
											dataLabels: {
												enabled: true,
												format: '<b>{point.name}</b><br>{point.percentage:.1f} %',
												distance: -50,
												filter: {
													property: 'percentage',
													operator: '>',
													value: 4
												}
											}
										}
									},
									series: [{
										name: 'Share',
										data: [
											{ name: 'Chrome', y: 61.41 },
											{ name: 'Internet Explorer', y: 11.84 },
											{ name: 'Firefox', y: 10.85 },
											{ name: 'Edge', y: 4.67 },
											{ name: 'Safari', y: 4.18 },
											{ name: 'Other', y: 7.05 }
										]
									}]
								});

							</script>

						</div>
						<p class="highcharts-description">
							This chart shows how data labels can be added to the data series. This
							can increase readability and comprehension for small datasets.
						</p>
					</figure>

				</div>
			</div>
			<div class="row">
				<div class="col-md-4"></div>
				<div class="col-md-8">
					<figure class="highcharts-figure">
						<div id="container-3dc">
							<script>
								Highcharts.chart('container-3dc', {
									chart: {
										type: 'spline',
										animation: Highcharts.svg, // don't animate in old IE
										marginRight: 10,
										events: {
											load: function () {

												// set up the updating of the chart each second
												var series = this.series[0];
												setInterval(function () {
													var x = (new Date()).getTime(), // current time
														y = Math.random();
													series.addPoint([x, y], true, true);
												}, 1000);
											}
										}
									},

									time: {
										useUTC: false
									},

									title: {
										text: 'Live random data'
									},

									accessibility: {
										announceNewData: {
											enabled: true,
											minAnnounceInterval: 15000,
											announcementFormatter: function (allSeries, newSeries, newPoint) {
												if (newPoint) {
													return 'New point added. Value: ' + newPoint.y;
												}
												return false;
											}
										}
									},

									xAxis: {
										type: 'datetime',
										tickPixelInterval: 150
									},

									yAxis: {
										title: {
											text: 'Value'
										},
										plotLines: [{
											value: 0,
											width: 1,
											color: '#808080'
										}]
									},

									tooltip: {
										headerFormat: '<b>{series.name}</b><br/>',
										pointFormat: '{point.x:%Y-%m-%d %H:%M:%S}<br/>{point.y:.2f}'
									},

									legend: {
										enabled: false
									},

									exporting: {
										enabled: false
									},

									series: [{
										name: 'Random data',
										data: (function () {
											// generate an array of random data
											var data = [],
												time = (new Date()).getTime(),
												i;

											for (i = -19; i <= 0; i += 1) {
												data.push({
													x: time + i * 1000,
													y: Math.random()
												});
											}
											return data;
										}())
									}]
								});

							</script>

						</div>
						<p class="highcharts-description">
							This chart shows how data labels can be added to the data series. This
							can increase readability and comprehension for small datasets.
						</p>
					</figure>

				</div>
			</div>
			<div class="row">
				<div class="col-md-4"></div>
				<div class="col-md-8">
					<figure class="highcharts-figure">
						<div id="container-sarea">
							<script>
								var chart = Highcharts.chart('container-sarea', {

									chart: {
										type: 'column'
									},

									title: {
										text: 'Highcharts responsive chart'
									},

									subtitle: {
										text: 'Resize the frame or click buttons to change appearance'
									},

									legend: {
										align: 'right',
										verticalAlign: 'middle',
										layout: 'vertical'
									},

									xAxis: {
										categories: ['Apples', 'Oranges', 'Bananas'],
										labels: {
											x: -10
										}
									},

									yAxis: {
										allowDecimals: false,
										title: {
											text: 'Amount'
										}
									},

									series: [{
										name: 'Christmas Eve',
										data: [1, 4, 3]
									}, {
										name: 'Christmas Day before dinner',
										data: [6, 4, 2]
									}, {
										name: 'Christmas Day after dinner',
										data: [8, 4, 3]
									}],

									responsive: {
										rules: [{
											condition: {
												maxWidth: 500
											},
											chartOptions: {
												legend: {
													align: 'center',
													verticalAlign: 'bottom',
													layout: 'horizontal'
												},
												yAxis: {
													labels: {
														align: 'left',
														x: 0,
														y: -5
													},
													title: {
														text: null
													}
												},
												subtitle: {
													text: null
												},
												credits: {
													enabled: false
												}
											}
										}]
									}
								});

								document.getElementById('small').addEventListener('click', function () {
									chart.setSize(400);
								});

								document.getElementById('large').addEventListener('click', function () {
									chart.setSize(600);
								});

								document.getElementById('auto').addEventListener('click', function () {
									chart.setSize(null);
								});



							</script>

						</div>
						<p class="highcharts-description">
							This chart shows how data labels can be added to the data series. This
							can increase readability and comprehension for small datasets.
						</p>
					</figure>

				</div>
			</div>

		</div>
	</div>
	<div id="maptab" class="tab-pane">
		<h3>Welcome to Google Map API</h3>
		</div>
	</div>
